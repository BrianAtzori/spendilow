openapi: 3.0.0
info:
  title: Spendilow API
  contact:
    name: Brian
    url: https://www.brianatzori.it/
    email: hello@brianatzori.it
  version: '1.0'
servers:
- url: http://localhost:5132/api/v1
  variables: {}
- url: http://localhost:5132
  description: ''
  variables: {}
paths:
  /users/new:
    post:
      tags:
      - users
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterUserRequest'
              - example:
                  email: gulten@email.com
                  password: password123
                  savings: 5000.5
                  salary: 60000
                  profileImage: https://i.pravatar.cc/150
                  workfield: Tecnologia
                  username: esempiouser
            example:
              email: gulten@email.com
              password: password123
              savings: 5000.5
              salary: 60000
              profileImage: https://i.pravatar.cc/150
              workfield: Tecnologia
              username: esempiouser
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/login:
    post:
      tags:
      - users
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginUserRequest'
              - example:
                  email: gulten@email.com
                  password: password123
            example:
              email: gulten@email.com
              password: password123
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/mfa-activation:
    get:
      tags:
      - users
      summary: Activate MFA User
      operationId: ActivateMFAUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/mfa-verification:
    post:
      tags:
      - users
      summary: Verify MFA
      operationId: VerifyMFA
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VerifyMFARequest'
              - example:
                  otp: '133518'
            example:
              otp: '133518'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/refresh-auth:
    get:
      tags:
      - users
      summary: Refresh Auth
      operationId: RefreshAuth
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/mod/123456:
    patch:
      tags:
      - users
      summary: Modify User
      operationId: ModifyUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/del/123456:
    delete:
      tags:
      - users
      summary: Modify User Copy
      operationId: ModifyUserCopy
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /utilities/check-server-alive:
    get:
      tags:
      - utilities
      summary: Check Server Alive
      operationId: CheckServerAlive
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
      - email
      - password
      - savings
      - salary
      - profileImage
      - workfield
      - username
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        savings:
          type: number
        salary:
          type: number
        profileImage:
          type: string
        workfield:
          type: string
        username:
          type: string
      example:
        email: gulten@email.com
        password: password123
        savings: 5000.5
        salary: 60000
        profileImage: https://i.pravatar.cc/150
        workfield: Tecnologia
        username: esempiouser
    LoginUserRequest:
      title: LoginUserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: gulten@email.com
        password: password123
    VerifyMFARequest:
      title: VerifyMFARequest
      required:
      - otp
      type: object
      properties:
        otp:
          type: string
      example:
        otp: '133518'
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: users
- name: utilities